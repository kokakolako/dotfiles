# Prezto configuration
# ---------------------------------------------

# Categories are now not more ugly yellow
zstyle ':completion:*' format $'> %{\e[0;31m%}%d%{\e[0m%}'

# Color output (auto set to 'no' on dumb terminals).
zstyle ':prezto:*:*' color 'yes'

# Set the Zsh modules to load (man zshmodules).
zstyle ':prezto:load' zmodule 'attr' 'stat'

# Set the Zsh functions to load (man zshcontrib).
zstyle ':prezto:load' zfunction 'zargs' 'zmv'

# Set the Prezto modules to load (browse modules).
# The order matters.
zstyle ':prezto:load' pmodule \
  'environment' \
  'git' \
  'editor' \
  'terminal' \
  'history' \
  'directory' \
  'spectrum' \
  'utility' \
  'completion' \
  'prompt'

# Set the key mapping style to 'emacs' or 'vi'.
zstyle ':prezto:module:editor' key-bindings 'emacs'

# Auto convert .... to ../..
zstyle ':prezto:module:editor' dot-expansion 'yes'

# Ignore submodules when they are 'dirty', 'untracked', 'all', or 'none'.
zstyle ':prezto:module:git:status:ignore' submodules 'all'

## History Substring Search

# Set the query found color.
zstyle ':prezto:module:history-substring-search:color' found ''

# Set the query not found color.
zstyle ':prezto:module:history-substring-search:color' not-found ''

# Set the search globbing flags.
zstyle ':prezto:module:history-substring-search' globbing-flags ''

# Theme
zstyle ':prezto:module:prompt' theme 'kokakolako'

# Set syntax highlighters.
zstyle ':prezto:module:syntax-highlighting' highlighters \
  'main' \
  'brackets' \
  'pattern' \
  'cursor' \
  'root'

# Set syntax highlighting styles.
zstyle ':prezto:module:syntax-highlighting' styles \
  'builtin' 'bg=blue' \
  'command' 'bg=blue' \
  'function' 'bg=blue'

# Auto set the tab and window titles.
zstyle ':prezto:module:terminal' auto-title 'yes'

# Set the window title format.
zstyle ':prezto:module:terminal:window-title' format '%n@%m: %N %s'

source /home/niklas/.config/alias.sh

# General configuration
# ---------------------------------------------

## Exorbitant long history
export HISTSIZE=100000000
export SAVEHIST=100000000

setopt hist_ignore_space
setopt hist_reduce_blanks
setopt correct
setopt complete_in_word

## Set Auto-CD
setopt autocd

## Set Auto-Pushd
setopt autopushd

## Load a Mass Renaming Module
autoload -U zmv

# environment variables
# ---------------------------------------------

BASE16_SHELL="$HOME/.config/base16-shell/base16-monokai.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

## Default Applications
# export TERMINAL="screen-256color"
# export TERM="screen-256color"
export EDITOR="vim -u $HOME/.config/vim/vimrc"
export VISUAL="vim -u $HOME/.config/vim/vimrc"
export GIT_EDITOR="vim -u $HOME/.config/vim/vimrc"
export BROWSER="firefox"

## Location of my configuration files
export XDG_CONFIG_HOME="$HOME/.config"

## Easily open my vimrc
export MYVIMRC="$HOME/.config/vim/vimrc"

## Pass Passwortmanager Directory
export PASSWORD_STORE_DIR="$HOME/.password-store"

## Configure ALSA
export ALSA_PCM_CARD=0
export ALSA_PCM_DEVICE=0
export FLASH_ALSA_CARD=0
export FLASH_ALSA_DEVICE=3

## Misc
export MAIL="$HOME/mail"
export CONF="$HOME/.config"

# misc
# ---------------------------------------------

function _dtach-interactive() {
    vared -p "\e[33mName your session:\e[0m\n" -c session-name
    dtach -A /tmp/${session-name}
}
zle -N _dtach-interactive
bindkey '^q' _dtach-interactive

# misc
# ---------------------------------------------

## Use Ctr+Z to foreground vim
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    fg %vim &> /dev/null
    zle redisplay
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

## FZF Autocompletion
source ~/.fzf.zsh

# set path
PATH=/bin:/usr/bin:/opt/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/usr/x86_64-pc-linux-gnu/gcc-bin/4.9.2:/home/niklas/.opt/fzf/bin:/home/niklas/bin

# autostart tmux or a new xserver
# ---------------------------------------------
#
if [[ ${TTY} == '/dev/tty1' && $HOST == 'rayquaza' ]]; then
    startx $HOME/.config/X11/xinitrc
else
fi

# if [[ -z ${TMUX} && ${USER} == 'niklas' ]]; then
#     ( tmux ls | grep -vq attached && tmux -2 at ) \
#         || tmux -2 -f $HOME/.config/tmux/tmux.conf
# fi

if [[ ! ${TTY} =~ '/dev/tty[0-7]' && -z $( pgrep ssh-agent ) ]]; then
    eval "$( keychain --eval --agents ssh id_dsa )"
fi

