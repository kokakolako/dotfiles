# Prezto
# ---------------------------------------------

# Categories are now not more ugly yellow
zstyle ':completion:*' format $'> %{\e[0;31m%}%d'

# Color output (auto set to 'no' on dumb terminals).
zstyle ':prezto:*:*' color 'yes'

# Set the Zsh modules to load (man zshmodules).
zstyle ':prezto:load' zmodule 'attr' 'stat'

# Set the Zsh functions to load (man zshcontrib).
zstyle ':prezto:load' zfunction 'zargs' 'zmv'

# Set the Prezto modules to load (browse modules).
# The order matters.
zstyle ':prezto:load' pmodule \
  'environment' \
  'git' \
  'terminal' \
  'editor' \
  'history' \
  'directory' \
  'spectrum' \
  'utility' \
  'completion' \
  'prompt'

# Set the key mapping style to 'emacs' or 'vi'.
zstyle ':prezto:module:editor' key-bindings 'emacs'

# Auto convert .... to ../..
zstyle ':prezto:module:editor' dot-expansion 'yes'

# Ignore submodules when they are 'dirty', 'untracked', 'all', or 'none'.
zstyle ':prezto:module:git:status:ignore' submodules 'all'

## History Substring Search

# Set the query found color.
zstyle ':prezto:module:history-substring-search:color' found ''

# Set the query not found color.
zstyle ':prezto:module:history-substring-search:color' not-found ''

# Set the search globbing flags.
zstyle ':prezto:module:history-substring-search' globbing-flags ''

# Theme
zstyle ':prezto:module:prompt' theme 'kokakolako'

# Set syntax highlighters.
zstyle ':prezto:module:syntax-highlighting' highlighters \
  'main' \
  'brackets' \
  'pattern' \
  'cursor' \
  'root'

# Set syntax highlighting styles.
zstyle ':prezto:module:syntax-highlighting' styles \
  'builtin' 'bg=blue' \
  'command' 'bg=blue' \
  'function' 'bg=blue'

# Terminal

# Auto set the tab and window titles.
zstyle ':prezto:module:terminal' auto-title 'yes'

# Set the window title format.
zstyle ':prezto:module:terminal:window-title' format '%n@%m: %s'

# General Configuration
# ---------------------------------------------

eval "$( dircolors ~/.config/dircolors/molokai.dircolors )"

## Exorbitant high history-size
export HISTSIZE=100000000
export SAVEHIST=100000000

setopt hist_ignore_space
setopt hist_reduce_blanks
setopt correct
setopt complete_in_word

## Set Auto-CD
setopt autocd

## Set Auto-Pushd
setopt autopushd

## Load a Mass Renaming Module
autoload -U zmv

# Environment Variables
# ---------------------------------------------

## Default Applications
export TERMINAL=screen-256color
export TERM=screen-256color
export EDITOR="/usr/bin/vim"
export VISUAL="/usr/bin/vim"
export BROWSER="/bin/firefox"

## Location of my configuration files
export XDG_CONFIG_HOME="/home/niklas/.config"

## Easily open my vimrc
export MYVIMRC="/home/niklas/.config/vim/vimrc"

## Plan 9 Settings
export PLAN9=/usr/lib/plan9/
export PATH="$PATH:/usr/lib/plan9/bin/"

## Adding the binfiles to $PATH
export PATH="$PATH:/home/niklas/.bin"

## Adding Ruby-Gems to $PATH
export PATH="$PATH:/home/niklas/.gem/ruby/2.1.0/bin/"

## Pass Passwortmanager Directory
export PASSWORD_STORE_DIR="/home/niklas/.password-store"

## Misc
export GIT_EDITOR="vim"
export MAIL="/home/niklas/mail"
export CONF="/home/niklas/.config"
export MARKPATH="/home/niklas/.marks"

## Adding root-specific programms to PATH
export PATH="$PATH:/usr/sbin"

export ALSA_PCM_CARD=0
export ALSA_PCM_DEVICE=0

export FLASH_ALSA_CARD=0
export FLASH_ALSA_DEVICE=3

# # Enable ZSH-autosuggestions plugin (for fish-like suggestions):
# # https://github.com/tarruda/zsh-autosuggestions
# # ---------------------------------------------
#
# source /home/niklas/.config/zsh/zsh-autosuggestions/autosuggestions.zsh
#
# # Adding suggestions at initialization via zle
# zle-line-init () {
#     zle autosuggest-start
# }
# zle -N zle-line-init
#
# export AUTOSUGGESTION_HIGHLIGHT_COLOR='fg=7'

# Misc
# ---------------------------------------------

## Use Ctr+Z to foreground vim
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    fg %vim &> /dev/null
    zle redisplay
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# Autostart Tmux or a new Xserver
# ---------------------------------------------

## Check if the user has started X
if [[ $(tty) == "/dev/tty1" && $HOST == "rayquaza" ]]; then
    ## Start X (when the user has not start it already)
	startx /home/niklas/.config/X11/xinitrc
else
    ## Starting tmux
    if [[ -z "$TMUX" && $USER == "niklas" ]]; then
        ( tmux ls | grep -vq attached && tmux -2 at ) || tmux -2 -f /home/niklas/.config/tmux/tmux.conf
    fi
fi

